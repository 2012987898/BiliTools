name: docker-dev

on:
  workflow_dispatch:

jobs:
  build-docker:
    if: github.repository == 'catlair/BiliTools'
    runs-on: ubuntu-latest
    environment: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: set Docker tag
        run: |
          sed -i 2a\echo\ version=dev docker-entrypoint.sh
          echo $(date)-dev >> src/version.txt
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: 'linux/amd64'
          tags: catlair/bilitools:dev
  release:
    if: github.repository == 'catlair/BiliTools'
    runs-on: ubuntu-latest
    environment: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: |
          rm yarn.lock
          jq '( .optionalDependencies )' package.json > optionalDependencies.json
          jq 'del( .optionalDependencies )' package.json > temp.json
          mv temp.json package.json
          yarn install
          npm install -g rollup
      - name: Build Babel
        run: |
          yarn build
          echo $(date)-dev >> dist/version.txt
          cp config/config.single.json dist/config/config.json
          cd dist
          mv index.js index.local.js
          mv index.scf.js ../
          mv index.fc.js ../
          cd ..
      - name: ZIP SCF
        run: |
          cp -rf ./tools/ ./package*.json yarn.lock ./docker/.yarnclean ./node_modules/ ./dist/
          mv ./index.scf.js ./dist/index.js
          cd dist
          yarn add tencentcloud-sdk-nodejs
          npm prune --production
          npm run autoclear
          rm -rf tools package*.json yarn.lock .yarnclean
          zip -r -q tencent_scf.zip *
          mv tencent_scf.zip ../
          cd ..
      - name: ZIP FC
        run: |
          cp -rf ./tools/ ./package*.json yarn.lock ./docker/.yarnclean ./node_modules/ ./dist/
          mv ./index.fc.js ./dist/index.js
          cd dist
          yarn add @alicloud/fc2
          npm prune --production
          npm run autoclear
          rm -rf tools package*.json yarn.lock .yarnclean
          zip -r -q aliyun_fc.zip *
          mv aliyun_fc.zip ../
          cd ..
      - name: Build Rollup
        run: |
          cat package.json | jq .optionalDependencies="$(cat optionalDependencies.json)" > demo.json
          mv demo.json package.json
          yarn
          yarn build:rollup
          cp dist/rollup gh-release-dev -r
      - name: Commit files to gh-release-dev branch
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'release: Commit from GitHub Actions (dev)'
          branch: gh-release-dev
          commit_options: '--no-verify --signoff'
          file_pattern: gh-release-dev/**
          push_options: '--force'
          skip_fetch: true
          skip_checkout: true
          create_branch: true
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            tencent_scf.zip
            aliyun_fc.zip
            gh-release-dev/index.js
            gh-release-dev/cat_bili_ql.js
          draft: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
