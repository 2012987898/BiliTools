name: gh-release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    if: github.repository == 'catlair/BiliTools'
    runs-on: ubuntu-latest
    environment: Build
    env:
      IS_PROD: ${{ startsWith(github.ref, 'refs/tags/v') }}
      IS_RC: ${{ contains(github.ref, '-rc') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: set version for prod
        if: ${{ env.IS_PROD == 'true' }}
        run: |
          echo BILI_VERSION=${{ github.ref  }} | sed -e "s/refs\/tags\/v//g" >> $GITHUB_ENV
      - name: set version for dev
        if: ${{ env.IS_PROD == 'false' }}
        run: |
          echo BILI_VERSION=$(date)-dev >> $GITHUB_ENV
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: |
          rm yarn.lock
          jq '( .optionalDependencies )' package.json > optionalDependencies.json
          cat package.json | jq "del( .optionalDependencies ) | .version = \"${{ env.BILI_VERSION }}\"" > temp.json
          mv temp.json package.json
          yarn install
      - name: Build Rollup
        run: |
          cat package.json | jq .optionalDependencies="$(cat optionalDependencies.json)" > demo.json
          mv demo.json package.json
          yarn
          yarn build:vm
          cp dist/rollup gh-release -r
      - name: Commit files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'release: Commit from GitHub Actions (gh-release)'
          branch: ${{ env.IS_PROD == 'true' && 'gh-release' || 'gh-release-dev' }}
          commit_options: '--no-verify --signoff'
          file_pattern: gh-release/**
          push_options: '--force'
          skip_fetch: true
          skip_checkout: false
          create_branch: true
      - name: test
        run: |
          git branch
          git log --oneline
          ls -l
          cd gh-release
          ls -l
      - name: Configure Private Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H gitee.com >> ~/.ssh/known_hosts
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
      - name: Push to Gitee
        run: |
          git remote set-url --push origin git@gitee.com:catlair/BiliTools.git
          GIT_BRANCH="${{ env.IS_PROD == 'true' && 'gh-release' || 'gh-release-dev' }}"
          git fetch --unshallow origin
          git push origin "$GIT_BRANCH":"$GIT_BRANCH" --force
